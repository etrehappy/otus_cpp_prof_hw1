# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
            os: [ubuntu-latest, macos-latest, windows-latest]  
            build_type: [Release]
            include:
            - os: ubuntu-latest
              c_compiler: gcc
              cpp_compiler: g++
            - os: macos-latest
              c_compiler: clang
              cpp_compiler: clang++
            - os: windows-latest
              c_compiler: cl
              cpp_compiler: cl 

    steps:
    - uses: actions/checkout@v4

    - name: Print OS version
      run: |
        echo "Operating System: $(uname -a)"
        echo "OS Version: $(lsb_release -a || sw_vers || ver)"
      shell: bash
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'

    - name: Print OS version (Windows)
      run: |
        echo "Operating System: $(cmd /c ver)"
      shell: cmd
      if: matrix.os == 'windows-latest'
